CIM QUESTIONNAIRE INSTALLATION INSTRUCTIONS

The following instructions describe how to install the CIM Questionnaire on a Unix-type server (Cent-OS, Linux, Mac-OSX) for the purpose of starting to use and test the web application. 

PRE-REQUISITES

The system must have the following Python packages installed:

o Python 2.7.2+

o Django 1.5.2+

o South

o libXML

o PIL
  
o django-registration, django-authopenid (build from source)


a PostGres database is recommended.  However, Django also supports MySQL and SQLite3.

DOWNLOAD

Download the software at the desired version from the github repository

cd <install directory>
tar xvfz django-cim-forms.<version>.tar.gz
cd CIM_Questionnaire

CONFIGURATION

o review settings.py

  verify that the db/port/user/pwd exist (postgres is recommended; try `createdb <db> -O <user> -p <port>`)
  to avoid profiling (recommended) set PROFILE and SETUP_HPY to "False"
  if needed, update STATIC_ROOT and STATICFILES_DIR
  if desired, set EMAIL_HOST and EMAIL_HOST_USER and EMAIL_HOST_PASSWORD and DEFAULT_FROM_EMAIL and SERVER_EMAIL

  for production deployments, it is recommended to set DEBUG to "False" and add the appropriate value(s) for ALLOWED_HOSTS

o start a virtual python enviroment (recommended)

  pip install django
  pip install psycopg2 (may require `sudo get-apt install libq-dev`)
  pip install lxml (may require `sudo get-apt install libxml2`)
  pip install django-openid-auth python-openid
  pip install south
  pip install guppy (for profiling)

INITIALIZATION

o python manage.py syncdb 

  this may generate a "transaction aborted" DatabaseError; this is an issue w/ v0.9.9.6 which will be fixed in future versions; for now comment out the offending bits of django_cim_forms/cim_1_5/forms.py, dycore/forms.py, dycore/models.py, dcf/cim_1_8_1/models/generated_models.py; then un-comment them once `syncdb` succeeds
  
  this may generate a "value too long" DatabaseError; this is a known issue w/ Django and PostGres; to fix it run `python manage.py dbshell < django_postgres_fix_sql`

o python manage.py migrate dcf 

o gather the static media files from the different applications into a single directory; first ensure location specified in settings.py by STATIC_ROOT exists

  `python manage.py collectstatic`

o copy over initial data

  `python manage.py loaddata fixtures/*.gz`

STARTUP

o Start the CIM Questionnaire either via the embedded Django server:

  `python manage.py runserver`

  or through apache:

  ensure apache conf is properly setup and restart the apache server

USE

o ordinarily admins would have to manually upload and register Controlled Vocabularies and Categorizations (and Projects and Versions); using fixtures, as above, avoids this requirement

o the ATOM feed functionality requires that the correct domain be specifed in the "sites" table via the admin interface.
